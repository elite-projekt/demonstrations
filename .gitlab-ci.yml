stages:
  - generate
  - lint
  - test
  - demo
  - build
  - upload
  - release

variables:
  # Package version can only contain numbers (0-9), and dots (.).
  # Must be in the format of X.Y.Z, i.e. should match /\A\d+\.\d+\.\d+\z/ regular expresion.
  # See https://docs.gitlab.com/ee/user/packages/generic_packages/#publish-a-package-file
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nativeapp/${CI_COMMIT_TAG}"
  INSTALLER_ZIP: "elite_installer.zip"
  SUB_PROJECT_DOCKERFILE: Dockerfile

lint:python-code:
  stage: lint
  image:
    name: python:3.10-slim
  before_script:
    - /usr/local/bin/python -m pip install --upgrade pip
    - python -m pip install flake8
  script:
    - flake8 --exclude=demos/uhh_obfuscation/native/resources/RansomWare.py,demos/uhh_obfuscation/native/resources/RansomWare_obfuscated.py,native/nativeapp/utils/admin/admin_app.py
  needs: []

sast:python-code:
  stage: lint
  image:
    name: python:3.9-slim
  before_script:
    - /usr/local/bin/python -m pip install --upgrade pip
    - python -m pip install bandit
  script:
    - bandit -c bandit.yaml -r . -ll
  allow_failure: true
  needs: []

test:python:
  stage: test
  image: python:3.7
  script:
    - cd native
    - pip install -r nativeapp/requirements.txt
    - python -m unittest


release:
  # Caution, as of 2021-02-02 these assets links require a login, see:
  # https://gitlab.com/gitlab-org/gitlab/-/issues/299384
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job"
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG


pages:
  stage: release
  image: alpine
  script:
    - apk update && apk add py-pip make
    - pip install -r sphinx/requirements.txt
    - cd sphinx && make html
    - mkdir -p ../public ; cp -r build/html/* ../public/
  artifacts:
    name: "demonstrations"
    paths:
      - public
  # Cache pages to enable
  #cache:
  #  key: "doc"
  #  paths:
  #    - public
  only:
    - develop


generate-demo-jobs:
  stage: generate
  image: alpine
  script:
    - apk update && apk add python3
    - python3 generate_ci_jobs.py
  artifacts:
    paths:
      - generated_demo_ci.yml
      - generated_license_ci.yml

license-jobs:
  stage: test
  trigger:
    include:
      - artifact: generated_license_ci.yml
        job: generate-demo-jobs
    strategy: depend

demo-image-jobs:
  stage: demo
  trigger:
    include:
      - artifact: generated_demo_ci.yml
        job: generate-demo-jobs
    strategy: depend

build-release-zip:
  stage: build
  image: alpine
  script:
    - apk update && apk add zip
    - zip -r elite.zip demoCA demos native .env build_image.sh build_images.py setup.py setup.cfg MANIFEST.in
    - mkdir elite
    - ls -hal
    - mv elite.zip elite/elite.zip && cp installer.bat elite/ && cp native/installer/install_dependencies.ps1 native/installer/nativeapp_dependencies.bat elite/
    - zip -r elite_installer.zip elite && mkdir elite_installer && mv elite_installer.zip elite_installer
  artifacts:
    name: "elite_installer"
    paths:
      - elite_installer


upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build-release-zip
      artifacts: true
  script:
    - ls -hal
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file elite_installer/${INSTALLER_ZIP} ${PACKAGE_REGISTRY_URL}/${INSTALLER_ZIP}

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - release-cli create --name "Release $CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" \
          --assets-link "{\"name\":\"${INSTALLER_ZIP}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${INSTALLER_ZIP}\"}"